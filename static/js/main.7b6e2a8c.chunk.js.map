{"version":3,"sources":["components/MyAppBar/index.js","pages/Areas.js","pages/Timelines.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","list","width","MyAppBar","_ref","title","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","isDrawerOpen","setIsDrawerOpen","react_default","a","createElement","className","root","AppBar","position","Toolbar","IconButton","edge","menuButton","color","aria-label","Menu_default","onClick","Typography","variant","Drawer","open","onClose","role","onKeyDown","List","data","map","area","i","ListItem","key","concat","Link","href","Divider","theme","backgroundColor","palette","background","paper","overflow","listSection","ul","padding","Areas","Fragment","Box","mt","mx","gutterBottom","Timelines","sliderRef","match","_useState","_useState2","index","setIndex","candidates","filter","d","params","tabs","c","Tab","label","name","timelines","twitter","boxShadow","Tabs","value","onChange","event","newValue","slickGoTo","indicatorColor","textColor","scrollButtons","lib_default","assign","dots","infinite","speed","slidesToShow","slidesToScroll","ref","slider","About","App","react_router_dom","react_router","exact","path","component","createMuiTheme","primary","main","secondary","error","red","A400","default","Boolean","window","location","hostname","ReactDOM","render","ThemeProvider","CssBaseline","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b6e2a8c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Link from '@material-ui/core/Link';\nimport Divider from '@material-ui/core/Divider';\nimport * as data from '../../data.json';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n});\n\nexport default function MyAppBar({title}) {\n  const classes = useStyles();\n\n  const [isDrawerOpen, setIsDrawerOpen] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            <MenuIcon onClick={() => setIsDrawerOpen(true)} />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            ツイセン {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\n        <div\n          className={classes.list}\n          role=\"presentation\"\n          onClick={() => setIsDrawerOpen(false)}\n          onKeyDown={() => setIsDrawerOpen(false)}\n        >\n          <List className={classes.root} >\n          {data.areas.map((area, i) => {\n            return (\n            <ListItem key={`area-${i}`}>\n                <Link href={`/timelines/${area}`}>{area}</Link>\n            </ListItem>\n            );\n          })}\n        </List>\n          <Divider />\n        </div>\n        </Drawer>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport MyAppBar from '../components/MyAppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nimport * as data from '../data.json';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n  },\n  listSection: {\n    backgroundColor: 'inherit',\n  },\n  ul: {\n    backgroundColor: 'inherit',\n    padding: 0,\n  },\n}));\n\nexport default function Areas() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <MyAppBar></MyAppBar>\n      <Box mt={9} mx={1}>      \n        <List className={classes.root} >\n          {data.areas.map((area, i) => {\n            return (\n            <ListItem key={`area-${i}`}>\n              <Typography variant=\"h3\" gutterBottom>\n                <Link href={`/timelines/${area}`}>{area}</Link>\n              </Typography>\n            </ListItem>\n            );\n          })}\n        </List>\n      </Box>\n    </React.Fragment>\n  );\n}","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport MyAppBar from '../components/MyAppBar';\n\nimport * as data from '../data.json';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nexport default function Timelines({match}) {\n\n  let sliderRef;\n  const [index, setIndex] = useState(0);\n  const candidates = data.candidates.filter((d) => d.area === match.params.area);\n\n  const handleChange = function(event, newValue) {\n    setIndex(newValue);\n    sliderRef.slickGoTo(newValue);\n  }\n  \n  const tabs = candidates.map((c, i) =>\n    <Tab label={`${c.name}`} key={c.name} />\n  )\n\n  const timelines = candidates.map((c, i) =>\n    <div>\n      <Box>\n      {candidates[i].twitter && <a className=\"twitter-timeline\" href={candidates[i].twitter}>Tweets by {candidates[i].name}</a>}\n      {!candidates[i].twitter && 'Twitterアカウントがみつかりませんでした'}\n      </Box>   \n    </div>);\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n    <React.Fragment>      \n      <AppBar position=\"fixed\" color=\"default\">\n        <Box mt={8} mx={0} boxShadow={0}>\n          <Tabs\n            value={index}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            {tabs}\n          </Tabs>\n        </Box>                \n      </AppBar>\n      <MyAppBar title={match.params.area}></MyAppBar>          \n      <Box mx={1} mt={17}>     \n        <Slider \n          {...settings}\n          ref={slider => (sliderRef = slider)}\n        >\n          {timelines}\n        </Slider>     \n      </Box>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport MyAppBar from './components/MyAppBar';\nimport * as data from './data.json';\nimport Areas from './pages/Areas';\nimport Timelines from './pages/Timelines';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>      \n      <Route exact path=\"/\" component={Areas} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/areas\" component={Areas} />\n      <Route path=\"/timelines/:area\" component={Timelines} />        \n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Candidates({ match }) {\n  return <React.Fragment>\n    <MyAppBar></MyAppBar>\n    <div>\n      <a style={{'width': '100%'}} className=\"twitter-timeline\" href=\"https://twitter.com/katsubekenji?ref_src=twsrc%5Etfw\">Tweets by katsubekenji</a> \n    </div>      \n  </React.Fragment>          \n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from './App';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}